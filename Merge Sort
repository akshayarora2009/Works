// MergeSort.cpp : Defines the entry point for the console application.
// Time Analysis of Merge Sort sorting algorithm

#include "stdafx.h"
#include<iostream>
#include<stdio.h>
#include<conio.h>
#include<time.h>
#include<fstream>
using namespace std;

void Merge(int A[100001],int low,int mid,int high)
{
	int h=low,j=mid+1;
	int B[100001];
	int i=low;
	while(h<=mid && j<=high)
	{
		if(A[h]<=A[j])
		{
			B[i]=A[h];
			i++;
			h++;
		}
		else
		{
			B[i]=A[j];
			i++;
			j++;
		}
	}
	if(h<=mid)
	{
		for(;h<=mid;h++)
		{
			B[i]=A[h];
			i++;
		}
	}
	else if(j<=high)
	{
		for(;j<=high;j++)
		{
			B[i]=A[j];
			i++;
		}
	}

	for(;low<=high;low++)
	{
		A[low]=B[low];
	}
}

void MergeSort(int A[100001],int low,int high)
{
	int mid;
	
	if(low<high)
	{
		mid=(low+high)/2;
		MergeSort(A,low,mid);
		MergeSort(A,mid+1,high);
		Merge(A,low,mid,high);
	}
}



int _tmain(int argc, _TCHAR* argv[])
{
	int A[100001];
	ofstream MyFile;
	MyFile.open("merge.txt");
	for(int i=4500;i<=100001;i+=4500)
	{
		for(int j=0;j<=i;j++)
		{
			A[j]=rand()%i;
		}
		clock_t start,end;
		start=clock();

		MergeSort(A,0,i);
		end=clock();
		MyFile<<i<<","<<(double)(end-start)/CLK_TCK<<endl;

	}

	return 0;
}

